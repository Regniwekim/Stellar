<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_brown_meteor_part</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>par_clickable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = choose(spr_brown_meteor, spr_grey_meteor);
image_index = irandom(image_number+1);
image_speed = 0;
spd = random_range(11,22)*(min(1,difficulty/2));
cur_spd = spd;
direction = point_direction(x,y,room_width/2,room_height/2)+random_range(-10,10);
motion_set(direction,cur_spd);
angle = random(360);
size = random_range(0.8,1.2);
image_xscale = size;
image_yscale = size;
spin = random_range(-3,3);

switch sprite_index {
    case spr_brown_meteor: spr_meteor_part = spr_brown_meteor_part; break;
    case spr_grey_meteor: spr_meteor_part = spr_grey_meteor_part; break;
}

difficulty += 0.005;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle += spin;
motion_set(direction,cur_spd);

if device_mouse_check_button_pressed(0,mb_left) {
    if collision_circle(mouse_x,mouse_y,60*size,id,0,0) {
        if global.limit_clicks = 0 {
            points += 50;
            if (instance_exists(obj_spawner)) {
                obj_spawner.score_scale = 1.2;
            }
            scr_meteor_burst();
            audio_play_sound(snd_explosion1,0,0);
            global.limit_clicks = 1;
            instance_destroy();
        }
    }
}

if y &gt; room_height {
    points -= min(100,points);
    if (instance_exists(obj_spawner)) {
        obj_spawner.score_green = 0;
        obj_spawner.score_blue = 0;
        obj_spawner.score_scale = 0.6;
        obj_spawner.shake_timer = 20;
    }
    hp -= 1;
    scr_meteor_burst();
    audio_play_sound(snd_explosion2,0,0);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
