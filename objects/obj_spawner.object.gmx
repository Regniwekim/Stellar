<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = room_speed*3;
alarm[1] = (random_range(room_speed*3,room_speed*5));

globalvar difficulty;

difficulty = 1;

score_red = 255;
score_green = 255;
score_blue = 255;

score_color = make_color_rgb(score_red,score_green,score_blue);
score_scale = 1;

shake_timer = 0;
chain_timer = 0;
rect_alp = 0;

ready_to_start = 0;

countdown = room_speed*3;

io_clear();

combo = 0;

instance_create(view_xview[0]+32,view_yview[0]+32,obj_option_button);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ready_to_start = 1 &amp;&amp; countdown &lt;= 0) {
    xx = random_range(144,room_width-144);
    instance_create(xx,-144,obj_meteor);
    alarm[1] = max((room_speed/3),(random_range(room_speed*4,room_speed*6)));
}
else {
    alarm[1] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ready_to_start = 1 &amp;&amp; countdown &lt;= 0) {
    xx = round((random_range(144,room_width-144)/64)*64);
    
    if !place_meeting(xx,-144,obj_star) {
        type = choose(type,type,type,type,0,1,2,3,4);
        star = instance_create(xx,-144,obj_star);
        if (instance_exists(star)) {
            star.type = type;
        }
        alarm[0] = random_range(room_speed/4,room_speed);
    }
    else {
        alarm[0] = 1;
    }
}
else {
    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_anykey) || device_mouse_check_button_pressed(0,mb_left)) {
    ready_to_start = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General Step Event

if (ready_to_start = 1) {
    if (keyboard_check_pressed(vk_backspace) || keyboard_check_pressed(vk_escape)) {
        instance_create(0,0,obj_pause);
    }
    
    if countdown &lt;= 0 {
        chance = irandom(1000);
        if chance = 995 {
            instance_create(random_range(-256,room_width+256),-256,obj_rainbow_star);
        }
    }
    
    if countdown &lt;= 0 {
        timer -= 1;
    }
    countdown--;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for game mode end

if (tot_combos = 25) &amp;&amp; (mode = 0){
    scr_highscore_check();
}

if (timer = 0) &amp;&amp; (mode = 1) {
    scr_highscore_check();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Limit star clicking
if(global.limit_clicks == 1){
    step_count+=1;
    if(step_count &gt; 2){ // Adjust this to taste
        step_count = 0;
        global.limit_clicks = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Score color
score_red = approach(score_red,255,50);
score_green = approach(score_green,255,50);
score_blue = approach(score_blue,255,50);
score_color = make_color_rgb(score_red,score_green,score_blue);
score_scale = approach(score_scale,1,0.1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Screen Shake
if (shake_timer &gt; 0) {
    view_xview[0] += random_range(-15,15);
    view_yview[0] += random_range(-15,15);
    view_hview[0] *= random_range(0.99,1.01);
    view_wview[0] *= random_range(0.99,1.01);
}
else {
    view_xview[0] = 10;
    view_yview[0] = 10;
    view_hview[0] = 720;
    view_wview[0]= 1280;
}
shake_timer--;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Combos
if (chain_timer &gt; 0) {
    yy += 8;
    alp -= 0.03;
}
chain_timer--;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rainbow Rectangle
rect_alp -= 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_particle_clean();

tut_completed = 1;

scr_tutorial_save();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_init_variables();

io_clear();

switch mode {
    case 0: spr = spr_combo; line1 = "Welcome to Combo Mode"; line2 = "Score as many points as you can in 25 Star Combos"; break;
    case 1: spr = spr_timed; line1 = "Welcome to Timed Mode"; line2 = "Score as many points as you can in 60 seconds"; break;
    case 2: spr = spr_endless; line1 = "Welcome to Endless Mode"; line2 = "Relax and Enjoy Stellar without any restrictions"; break;
    default: spr = spr_combo; line1 = "Welcome to Combo Mode"; line2 = "Score as many points as you can in 25 Star Combos"; break;
}

ready_to_start = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI

if (ready_to_start == 1) {
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_set_color(c_white);
    draw_set_font(fnt_sm);
    draw_set_color(score_color);
    draw_text_transformed(sw/2,24,"SCORE: " + string(points),score_scale,score_scale,0);
    draw_set_color(c_white);
    draw_set_halign(fa_left);
    
    if countdown &gt; 0 {
        draw_set_font(fnt_countdown);
        draw_set_color(c_white);
        draw_set_halign(fa_center);
        draw_text(sw/2,sh/2,string(ceil(countdown/room_speed)));
    }
    
    draw_set_font(fnt_sm);
    draw_set_halign(fa_right);
    draw_set_color(c_white);
    switch mode {
        case 0: //arcade mode
            draw_text(sw-8,24,"COMBOS: " + string(tot_combos)); break;
        case 1: //timed mode
            draw_text(sw-8,24,"TIME: " + string(round(timer/room_speed))); break;
        case 2: //endless mode
            break;
    }
    if (chain_timer &gt; 0) {
        draw_set_color(c_white);
        draw_set_halign(fa_center);
        draw_set_valign(fa_center);
        draw_set_font(fnt_lg);
        draw_set_alpha(alp);
        draw_text(sw/2,(sh/2)-yy,string(combo) + "X COMBO!");
        draw_set_alpha(1);
    }
}
else {
    draw_set_font(fnt_med);
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_set_color(c_white);
    draw_text(sw/2,128,line1);
    draw_set_font(fnt_sm);
    draw_text(sw/2,sh/2,line2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_draw_star_lines();
draw_set_alpha(rect_alp);
draw_set_color(c_white);
draw_rectangle(0,0,room_width,room_height,0);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
