<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rainbow_star</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = irandom(image_number+1);
scr_rainbow_trail();

spd = random_range(20,40);
cur_spd = spd;
direction = point_direction(x,y,room_width/2,room_height/2)+random_range(-10,10);
motion_set(direction,cur_spd);
angle = random(360);
size = random_range(0.5,0.75);
image_xscale = size;
image_yscale = size;
spin = random_range(-3,3);
ex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(direction,cur_spd);
part_emitter_region(global.syst_rainbow_trail,emit,x-(sprite_width/2),x+(sprite_width/2),y-(sprite_height/2),y+(sprite_height/2),ps_shape_ellipse,ps_distr_gaussian);

if device_mouse_check_button_pressed(0,mb_left) {
    if collision_point(mouse_x,mouse_y,id,0,0) {
        ex = instance_number(obj_star);
        points += (round(50*(power(ex,1.2))));
        audio_play_sound(snd_rainbow_pick,0,0);
        scr_rainbow_burst();
        scr_rainbow_trail_clean();
        with (obj_star) {
            scr_star_burst();
            instance_destroy();
        }
        chain = 0;
        c_type = 100;
        global.link = 0;
        instance_destroy();
    }
}

angle += spin;

image_angle = angle;

if y &gt; room_height {
    scr_rainbow_trail_clean();
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>155,145</point>
    <point>155,155</point>
  </PhysicsShapePoints>
</object>
