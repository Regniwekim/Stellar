<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fb_login</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_clickable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pressed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(permissions);
ds_map_destroy(mFacebookResponse);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pressed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = room_speed;

var current_key, current_value, current_value2

current_key = ds_map_find_first(mFacebookResponse);
if (ds_map_exists(mFacebookResponse, current_key)) {
    current_value = ds_map_find_value(mFacebookResponse, "name");
    global.my_name = string(current_value);
    global.uid = ds_map_find_value(mFacebookResponse, "id");
    
    score_post_map = ds_map_create();    
    ds_map_add(score_post_map,"score",string(points));
    ds_map_add(score_post_map,"access_token",facebook_accesstoken());
    facebook_graph_request("me/scores","POST",score_post_map,-1);
    ds_map_destroy(score_post_map);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var fbStatus;
fbStatus = facebook_status();
show_debug_message( "Facebook status: " + fbStatus);
switch (fbStatus) {
    case "AUTHORISED":
        global.Auth = true;
        var request = "publish_actions";
        if (!facebook_check_permission(request)) {
            ds_list_add(permissions, request);
            request_ID = facebook_request_publish_permissions(permissions);
        }
        if (global.my_name = "") {
            mFacebookResponse = ds_map_create();
            facebook_graph_request("me","GET",-1,mFacebookResponse);
            alarm[1] = room_speed/2;
        }
        //instance_destroy();
        break;
        
    case "IDLE":
        facebook_login(permissions, fb_login_default);
        global.AskedForLogin = true;
        alarm[0] = 30;
        break;
        
    case "FAILED":
        facebook_login(permissions, fb_login_default);
        global.AskedForLogin = true;
        alarm[0] = 30;
        break;
        
    case "DENIED":
        if (!global.AskedForLogin) {
            facebook_login(permissions, fb_login_default);
            global.AskedForLogin = true;
        }
        else {
            instance_destroy();
        }
        
    default:
        alarm[0] = 30;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pressed = 0) {
    if (os_is_network_connected()) {
        facebook_init();
        global.Auth = false;
        global.AskedForLogin = false;
        permissions = ds_list_create();
        ds_list_add(permissions,"public_profile", "user_friends", "user_games_activity");
        facebook_login(permissions,fb_login_default);
        alarm[0] = 1;
    }
    pressed = 1;
    alarm[3] = room_speed*10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
