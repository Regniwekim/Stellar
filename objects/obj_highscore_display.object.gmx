<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_all(1);
timer = room_speed;
grid = ds_grid_create(2,5);
for (var i=0;i&lt;5;i++) {
    grid[# 0,i] = "";
    grid[# 1,i] = 0;
}
if (os_is_network_connected()) {

    if (global.Auth = false) { //if the user is not signed in to Facebook
        instance_create(room_width/2,192,obj_facebook_login); //ask them to sign in
    }
    else {
        wp = instance_create(view_xview[0]+16,room_height-96,obj_wallpost);
        fb = instance_create(view_xview[0]+view_wview[0]-16,room_height-96,obj_fb_invite);
        got_response = 0;
        graph_response = ds_map_create();
        alarm[1] = room_speed/2;
    }
    
    //show ads
    if (ads = 1) {
        GoogleMobileAds_AddBanner("xxx"/*banner ad id goes here*/, GoogleMobileAds_Banner);
    }
}
auth_trigger = 0;
wp = noone;
fb = noone;
px = 0;
py = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>token = ds_map_create();
fb_token = facebook_accesstoken();
ds_map_add(token,"access_token",fb_token);
facebook_graph_request(string(000)/*facebook app id goes here*/ + "/scores","GET",token,graph_response);
alarm[0] = room_speed/2;
alarm[1] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_map_exists(graph_response, "data")) {

    var data_list, data_list_size, n, namenum, scorenum, friend_map, friend_map2, current_key, current_value;
    
    namenum = 0;
    scorenum = 0;
    
    data_list = ds_map_find_value(graph_response, "data");
    data_list_size = ds_list_size(data_list);
    
    got_response = true;
    for (n=0;n&lt;data_list_size;n++) {
        friend_map = ds_list_find_value(data_list, n);
        current_key = ds_map_find_first(friend_map);
        while (ds_map_exists(friend_map, current_key)) {
            current_value = ds_map_find_value(friend_map, current_key);
            if (namenum &lt;= 4) {
                if (string(current_key) == "user") {
                    friend_map2 = ds_map_find_value(current_value,"name");
                    grid[# 0,namenum] = string(friend_map2);
                    namenum++;
                }
                if (string(current_key) == "score") {
                    grid[# 1,scorenum] = string(current_value);
                    scorenum++;
                }
            }
            current_key = ds_map_find_next(friend_map, current_key);
        }
    }

}

//ds_grid_sort(grid,1,0);
if (!got_response) {
    alarm[0] = room_speed/2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if timer &lt; 0 {
    if device_mouse_check_button_released(0,mb_left) {
        if (!collision_point(mouse_x,mouse_y,par_clickable,0,1)) {
            room_goto(rm_title);
        }
    }
}

timer -= 1;

if (global.Auth) {
    if (auth_trigger = 0) {
        wp = instance_create(32,room_height-96,obj_wallpost);
        fb = instance_create(room_width-32,room_height-96,obj_fb_invite);
        got_response = 0;
        graph_response = ds_map_create();
        alarm[1] = room_speed/2;
        auth_trigger = 1;
    }
}

    if (instance_exists(wp)) {
        wp.y = py-64
    }
    if (instance_exists(fb)) {
        fb.y = py-64
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ident = ds_map_find_value(async_load, "type");
var loaded = ds_map_find_value(async_load, "loaded");

if (ident == "banner_load") {
    var bw = ds_map_find_value(async_load, "width");
    var bh = ds_map_find_value(async_load, "height");
    px = ((sw-bw)/2);
    py = (sh-bh-5);
    GoogleMobileAds_MoveBanner(px,py);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//GoogleMobileAds_RemoveBanner();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.my_name != "") {

    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_set_color(c_white);
    draw_set_font(fnt_lg);
    draw_text(room_width/2,16,"Facebook High Scores");
    draw_set_font(fnt_med);
    for (var i=0;i&lt;5;i++) {
        draw_set_halign(fa_left);
        draw_text(view_xview[0]+96,128+(i*56),string(i+1) + ". " + string(grid[# 0,i]));
        draw_set_halign(fa_right);
        draw_text(view_xview[0]+view_wview[0]-96,128+(i*56),string(grid[# 1,i]));
    }
}
else {
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_set_color(c_white);
    draw_set_font(fnt_lg);
    draw_text(room_width/2,16,line1);
    draw_set_font(fnt_med);
    draw_text(room_width/2,room_height/2-64,line2+"#"+line3);
    draw_set_font(fnt_sm);
    draw_text(room_width/2,room_height/2+256,line4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if timer &lt; 0 {
room_goto(rm_title);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
